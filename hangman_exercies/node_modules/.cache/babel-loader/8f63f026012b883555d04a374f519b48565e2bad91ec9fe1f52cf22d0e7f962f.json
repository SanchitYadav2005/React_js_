{"ast":null,"code":"var _jsxFileName = \"H:\\\\React_JS_Course\\\\hangman_exercies\\\\src\\\\Hangman.js\";\nimport React, { Component } from \"react\";\nimport \"./Hangman.css\";\nimport img0 from \"./img/0.png\";\nimport img1 from \"./img/1.png\";\nimport img2 from \"./img/2.png\";\nimport img3 from \"./img/3.png\";\nimport img4 from \"./img/4.png\";\nimport img5 from \"./img/5.png\";\nimport img6 from \"./img/6.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Hangman extends Component {\n  constructor(props) {\n    super(props);\n    // set is a collection that must be unique.\n    this.state = {\n      nWrong: 0,\n      guessed: new Set(),\n      answer: \"apple\"\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n  }\n  guessedWord() {\n    return this.state.answer.split(\"\").map(ltr => this.state.guessed.has(ltr) ? ltr : \"_\");\n  }\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split().map(ltr => /*#__PURE__*/_jsxDEV(\"button\", {\n      value: ltr,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(ltr),\n      children: ltr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Hangman\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Hangman-images\",\n        src: this.props.images[this.state.nWrong]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Handman-word\",\n        children: this.guessedWord()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Hangman-btns\",\n        children: this.generateButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n}\nHangman.defaultProps = {\n  maxWrong: 6,\n  images: [img0, img1, img2, img3, img4, img5, img6]\n};\nexport default Hangman;","map":{"version":3,"names":["React","Component","img0","img1","img2","img3","img4","img5","img6","jsxDEV","_jsxDEV","Hangman","constructor","props","state","nWrong","guessed","Set","answer","handleGuess","bind","guessedWord","split","map","ltr","has","evt","target","value","setState","st","add","includes","generateButtons","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","render","className","src","images","defaultProps","maxWrong"],"sources":["H:/React_JS_Course/hangman_exercies/src/Hangman.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Hangman.css\";\r\nimport img0 from \"./img/0.png\";\r\nimport img1 from \"./img/1.png\";\r\nimport img2 from \"./img/2.png\";\r\nimport img3 from \"./img/3.png\";\r\nimport img4 from \"./img/4.png\";\r\nimport img5 from \"./img/5.png\";\r\nimport img6 from \"./img/6.png\";\r\n\r\nclass Hangman extends Component {\r\n    static defaultProps = {\r\n        maxWrong : 6,\r\n        images: [img0, img1, img2,img3,img4,img5,img6]\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        // set is a collection that must be unique.\r\n        this.state = {nWrong: 0, guessed: new Set(), answer: \"apple\"}\r\n        this.handleGuess = this.handleGuess.bind(this);\r\n    }\r\n\r\n    guessedWord(){\r\n        return this.state.answer\r\n            .split(\"\")\r\n            .map(ltr=> (this.state.guessed.has(ltr) ? ltr : \"_\"))   \r\n    }\r\n    handleGuess(evt){\r\n        let ltr = evt.target.value;\r\n        this.setState(st => ({\r\n            guessed: st.guessed.add(ltr),\r\n            nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\r\n        }));\r\n    }\r\n    generateButtons(){\r\n        return \"abcdefghijklmnopqrstuvwxyz\".split().map(ltr => (\r\n            <button\r\n                value={ltr}\r\n                onClick= {this.handleGuess}\r\n                disabled={this.state.guessed.has(ltr)}\r\n            >\r\n                {ltr}\r\n            </button>    \r\n            \r\n        ));\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Hangman\">\r\n                <h1>Hangman</h1>\r\n                <img className=\"Hangman-images\" src={this.props.images[this.state.nWrong]}/>\r\n                <p className=\"Handman-word\">{this.guessedWord()}</p>\r\n                <p className=\"Hangman-btns\">{this.generateButtons()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hangman;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}